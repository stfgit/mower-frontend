pipeline:
  properties:
    ci:
      codebase:
        connectorRef: <+input>
        repoName: <+input>
        build: <+input>
  stages:
    - stage:
        name: scan sources
        identifier: source_code_scan
        template:
          templateRef: account.source_code_scan
          versionLabel: v0.1
          templateInputs:
            type: SecurityTests
            spec:
              infrastructure:
                type: KubernetesDirect
                spec:
                  connectorRef: <+input>
                  namespace: <+input>.default(harness-ci)
              execution:
                steps:
                  - parallel:
                      - step:
                          identifier: owasp
                          type: Owasp
                          spec:
                            advanced:
                              fail_on_severity: <+input>
                            resources:
                              limits:
                                memory: <+input>.default(2Gi)
                                cpu: <+input>.default(500m)
                      - step:
                          identifier: gitleaks
                          type: Gitleaks
                          spec:
                            advanced:
                              fail_on_severity: <+input>
                            resources:
                              limits:
                                memory: <+input>
                                cpu: <+input>
            delegateSelectors: <+input>
    - stage:
        name: npm build and push
        identifier: npm_build_and_push
        template:
          templateRef: account.npm_build
          versionLabel: v0.2
          templateInputs:
            type: CI
            spec:
              infrastructure:
                type: KubernetesDirect
                spec:
                  connectorRef: <+input>
                  namespace: <+input>.default(harness-ci)
              execution:
                steps:
                  - step:
                      identifier: Workspace_Validation
                      type: Run
                      spec:
                        connectorRef: <+input>
                        image: <+input>.default(node:20)
                        resources:
                          limits:
                            memory: <+input>.default(512Mi)
                            cpu: <+input>.default(500m)
                  - step:
                      identifier: Install_Dependencies
                      type: Run
                      spec:
                        connectorRef: <+input>
                        image: <+input>.default(node:20)
                        resources:
                          limits:
                            memory: <+input>.default(2Gi)
                            cpu: <+input>.default(1000m)
                  - step:
                      identifier: Code_Quality_Check
                      type: Run
                      spec:
                        connectorRef: <+input>
                        image: <+input>.default(node:20)
                        resources:
                          limits:
                            memory: <+input>.default(1Gi)
                            cpu: <+input>.default(500m)
                  - step:
                      identifier: Build_Application
                      type: Run
                      spec:
                        connectorRef: <+input>
                        image: <+input>.default(node:20)
                        resources:
                          limits:
                            memory: <+input>.default(4Gi)
                            cpu: <+input>.default(2000m)
                  - step:
                      identifier: Run_Tests
                      type: Run
                      spec:
                        connectorRef: <+input>
                        image: <+input>.default(node:20)
                        resources:
                          limits:
                            memory: <+input>.default(2Gi)
                            cpu: <+input>.default(1000m)
                  - step:
                      identifier: Security_Audit
                      type: Run
                      spec:
                        connectorRef: <+input>
                        image: <+input>.default(node:20)
                        resources:
                          limits:
                            memory: <+input>.default(1Gi)
                            cpu: <+input>.default(500m)
                  - step:
                      identifier: BuildAndPushDockerRegistry_1
                      type: BuildAndPushDockerRegistry
                      spec:
                        connectorRef: <+input>
                        repo: <+input>
                        dockerfile: <+input>.default(Dockerfile)
                        context: <+input>.default(.)
                        tags: <+input>
                        resources:
                          limits:
                            memory: <+input>.default(4Gi)
                            cpu: <+input>.default(1500m)
              variables:
                - name: WORKING_DIRECTORY
                  type: String
                  value: <+input>.default(.)
                - name: NODE_VERSION
                  type: String
                  value: <+input>.default(20)
            delegateSelectors: <+input>
    - stage:
        name: scan images
        identifier: scan_images
        template:
          templateRef: account.images_scan
          versionLabel: v0.1
          templateInputs:
            type: SecurityTests
            spec:
              infrastructure:
                type: KubernetesDirect
                spec:
                  connectorRef: <+input>
                  namespace: <+input>.default(harness-ci)
              execution:
                steps:
                  - step:
                      identifier: aquatrivy_container
                      type: AquaTrivy
                      spec:
                        advanced:
                          fail_on_severity: <+input>
                        resources:
                          limits:
                            memory: <+input>
                            cpu: <+input>
            delegateSelectors: <+input>
    - stage:
        name: deploy dev
        identifier: deploy_dev
        template:
          templateRef: account.deploy_k8s
          versionLabel: v0.1
          templateInputs:
            type: Deployment
            spec:
              environment:
                environmentRef: development
                infrastructureDefinitions:
                  - identifier: infra_dev
              service:
                serviceRef: mower_frontend_service
                serviceInputs:
                  serviceDefinition:
                    type: Kubernetes
                    spec:
                      artifacts:
                        primary:
                          primaryArtifactRef: <+input>
                          sources: <+input>
            delegateSelectors:
              - helm-delegate
    - stage:
        name: production approval
        identifier: prod_approval
        template:
          templateRef: account.manual_approval
          versionLabel: v0.1
          templateInputs:
            type: Approval
            spec:
              execution:
                steps:
                  - step:
                      identifier: approval
                      type: HarnessApproval
                      spec:
                        approvers:
                          minimumCount: <+input>.default(1)
                          userGroups: <+input>
            delegateSelectors: <+input>
    - stage:
        name: deploy prod
        identifier: deploy_prod
        template:
          templateRef: account.deploy_k8s
          versionLabel: v0.1
          templateInputs:
            type: Deployment
            spec:
              environment:
                environmentRef: prod
                infrastructureDefinitions:
                  - identifier: mower_frontend_infra
              service:
                useFromStage:
                  stage: deploy_dev
            delegateSelectors:
              - helm-delegate
  name: mower frontend
  identifier: mower_frontend_cicd
  tags:
    frontend: ""
    nextjs: ""
    react: ""
  projectIdentifier: Mower
  orgIdentifier: stf
